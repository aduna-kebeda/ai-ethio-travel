# Generated by Django 3.2.23 on 2025-03-21 11:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('business_type', models.CharField(choices=[('hotel', 'Hotel'), ('restaurant', 'Restaurant'), ('tour_operator', 'Tour Operator'), ('shop', 'Shop'), ('transport', 'Transportation'), ('guide', 'Tour Guide'), ('other', 'Other')], max_length=50)),
                ('description', models.TextField()),
                ('price_range', models.CharField(choices=[('budget', 'Budget'), ('mid_range', 'Mid Range'), ('luxury', 'Luxury')], max_length=50)),
                ('address', models.TextField()),
                ('location', models.CharField(max_length=200)),
                ('region', models.CharField(max_length=100)),
                ('contact_number', models.CharField(max_length=20)),
                ('whatsapp', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('social_media', models.JSONField(default=dict)),
                ('services', models.JSONField(default=list)),
                ('amenities', models.JSONField(default=list)),
                ('images', models.JSONField(default=list)),
                ('opening_hours', models.JSONField(default=dict)),
                ('payment_methods', models.JSONField(default=list)),
                ('languages_spoken', models.JSONField(default=list)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending'), ('verified', 'Verified'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('verification_notes', models.TextField(blank=True)),
                ('business_license', models.CharField(blank=True, max_length=100)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('review_count', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'businesses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CertificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, unique=True)),
                ('purpose', models.CharField(max_length=50)),
                ('expires_at', models.DateTimeField()),
                ('used', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=200)),
                ('region', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('cultural', 'Cultural'), ('historical', 'Historical'), ('natural', 'Natural'), ('adventure', 'Adventure')], max_length=50)),
                ('images', models.JSONField(default=list)),
                ('price_range', models.CharField(max_length=50)),
                ('best_time_to_visit', models.CharField(max_length=200)),
                ('weather_info', models.JSONField(default=dict)),
                ('cultural_notes', models.TextField(blank=True)),
                ('local_customs', models.TextField(blank=True)),
                ('language_tips', models.TextField(blank=True)),
                ('etiquette_guidelines', models.TextField(blank=True)),
                ('safety_level', models.CharField(choices=[('high', 'High Safety'), ('medium', 'Medium Safety'), ('caution', 'Exercise Caution')], max_length=50)),
                ('safety_notes', models.TextField(blank=True)),
                ('emergency_contacts', models.JSONField(default=dict)),
                ('health_guidelines', models.TextField(blank=True)),
                ('travel_advisories', models.TextField(blank=True)),
                ('transportation_options', models.JSONField(default=list)),
                ('local_transportation', models.TextField(blank=True)),
                ('currency_info', models.TextField(blank=True)),
                ('visa_requirements', models.TextField(blank=True)),
                ('attractions', models.JSONField(default=list)),
                ('activities', models.JSONField(default=list)),
                ('amenities', models.JSONField(default=list)),
                ('accessibility_info', models.TextField(blank=True)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('review_count', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date', models.DateTimeField()),
                ('location', models.CharField(max_length=200)),
                ('capacity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Good'), (4, '4 - Very Good'), (5, '5 - Excellent')])),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='travel.destination')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('am', 'Amharic'), ('or', 'Oromiffa'), ('ti', 'Tigrinya'), ('so', 'Somali')], default='en', max_length=2)),
                ('preferred_currency', models.CharField(choices=[('ETB', 'Ethiopian Birr'), ('USD', 'US Dollar'), ('EUR', 'Euro')], default='ETB', max_length=3)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('profile_picture', models.URLField(blank=True)),
                ('bio', models.TextField(blank=True)),
                ('travel_style', models.JSONField(default=dict)),
                ('interests', models.JSONField(default=list)),
                ('dietary_restrictions', models.JSONField(default=list)),
                ('accessibility_needs', models.JSONField(default=list)),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('notification_preferences', models.JSONField(default=dict)),
                ('total_trips', models.PositiveIntegerField(default=0)),
                ('visited_destinations', models.JSONField(default=list)),
                ('favorite_destinations', models.JSONField(default=list)),
                ('travel_bucket_list', models.JSONField(default=list)),
                ('emergency_contact', models.JSONField(default=dict)),
                ('medical_info', models.TextField(blank=True)),
                ('insurance_info', models.JSONField(default=dict)),
                ('social_links', models.JSONField(default=dict)),
                ('ai_preferences', models.JSONField(default=dict)),
                ('recommendation_history', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('reset_code', models.CharField(blank=True, max_length=6, null=True)),
                ('followers', models.ManyToManyField(blank=True, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(max_length=50)),
                ('object_id', models.PositiveIntegerField()),
                ('interaction_data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(max_length=50)),
                ('content', models.TextField()),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TravelHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('photos', models.JSONField(default=list)),
                ('expenses', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='travel.destination')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TravelGuide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('guide_type', models.CharField(choices=[('cultural', 'Cultural Guide'), ('practical', 'Practical Guide'), ('safety', 'Safety Guide'), ('language', 'Language Guide'), ('transport', 'Transport Guide'), ('food', 'Food Guide'), ('shopping', 'Shopping Guide'), ('emergency', 'Emergency Guide')], max_length=20)),
                ('region', models.CharField(choices=[('addis', 'Addis Ababa'), ('amhara', 'Amhara'), ('oromia', 'Oromia'), ('snnpr', 'SNNPR'), ('tigray', 'Tigray'), ('somali', 'Somali'), ('afar', 'Afar'), ('benishangul', 'Benishangul-Gumuz'), ('gambela', 'Gambela'), ('harari', 'Harari'), ('dire_dawa', 'Dire Dawa')], max_length=20)),
                ('content', models.TextField()),
                ('summary', models.TextField()),
                ('key_points', models.JSONField(default=list)),
                ('images', models.JSONField(default=list)),
                ('videos', models.JSONField(default=list)),
                ('customs', models.JSONField(default=list)),
                ('etiquette', models.JSONField(default=list)),
                ('festivals', models.JSONField(default=list)),
                ('traditions', models.JSONField(default=list)),
                ('transportation', models.JSONField(default=dict)),
                ('accommodation', models.JSONField(default=dict)),
                ('food_and_drink', models.JSONField(default=dict)),
                ('shopping', models.JSONField(default=dict)),
                ('safety_tips', models.JSONField(default=list)),
                ('emergency_contacts', models.JSONField(default=list)),
                ('health_advisories', models.JSONField(default=list)),
                ('weather_info', models.JSONField(default=dict)),
                ('common_phrases', models.JSONField(default=list)),
                ('pronunciation_guide', models.JSONField(default=dict)),
                ('language_tips', models.TextField(blank=True)),
                ('interactive_map', models.JSONField(default=dict)),
                ('offline_content', models.JSONField(default=dict)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='guides', to=settings.AUTH_USER_MODEL)),
                ('related_guides', models.ManyToManyField(blank=True, related_name='_travel_travelguide_related_guides_+', to='travel.TravelGuide')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReviewLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='travel.review')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='review_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='travel.review')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notifications', models.BooleanField(default=True)),
                ('push_notifications', models.BooleanField(default=True)),
                ('notification_preferences', models.JSONField(default=dict)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('news_type', models.CharField(choices=[('tourism', 'Tourism News'), ('safety', 'Safety Advisory'), ('event', 'Event Update'), ('promotion', 'Promotion'), ('announcement', 'Announcement'), ('weather', 'Weather Update'), ('emergency', 'Emergency Alert'), ('feature', 'Feature Story')], max_length=20)),
                ('region', models.CharField(choices=[('addis', 'Addis Ababa'), ('amhara', 'Amhara'), ('oromia', 'Oromia'), ('snnpr', 'SNNPR'), ('tigray', 'Tigray'), ('somali', 'Somali'), ('afar', 'Afar'), ('benishangul', 'Benishangul-Gumuz'), ('gambela', 'Gambela'), ('harari', 'Harari'), ('dire_dawa', 'Dire Dawa'), ('national', 'National'), ('international', 'International')], max_length=20)),
                ('content', models.TextField()),
                ('summary', models.TextField()),
                ('images', models.JSONField(default=list)),
                ('videos', models.JSONField(default=list)),
                ('links', models.JSONField(default=list)),
                ('related_destinations', models.JSONField(default=list)),
                ('related_events', models.JSONField(default=list)),
                ('related_businesses', models.JSONField(default=list)),
                ('tags', models.JSONField(default=list)),
                ('impact_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('requires_action', models.BooleanField(default=False)),
                ('action_required', models.TextField(blank=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('is_time_sensitive', models.BooleanField(default=False)),
                ('target_audience', models.JSONField(default=list)),
                ('notification_sent', models.BooleanField(default=False)),
                ('notification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('shares_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='news', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'news',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('trip_type', models.CharField(choices=[('solo', 'Solo'), ('couple', 'Couple'), ('family', 'Family'), ('friends', 'Friends'), ('business', 'Business')], max_length=20)),
                ('number_of_travelers', models.PositiveIntegerField()),
                ('budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('preferences', models.JSONField(default=dict)),
                ('destinations', models.JSONField(default=list)),
                ('activities', models.JSONField(default=list)),
                ('accommodations', models.JSONField(default=list)),
                ('transportation', models.JSONField(default=list)),
                ('ai_recommendations', models.JSONField(default=list)),
                ('cultural_notes', models.JSONField(default=list)),
                ('weather_info', models.JSONField(default=dict)),
                ('safety_tips', models.JSONField(default=list)),
                ('total_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('bookings', models.JSONField(default=list)),
                ('payment_status', models.JSONField(default=dict)),
                ('emergency_contacts', models.JSONField(default=list)),
                ('medical_info', models.TextField(blank=True)),
                ('insurance_info', models.JSONField(default=dict)),
                ('is_public', models.BooleanField(default=False)),
                ('shared_with', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_generated_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itineraries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'itineraries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='destination',
            index=models.Index(fields=['name'], name='travel_dest_name_5fda9e_idx'),
        ),
        migrations.AddIndex(
            model_name='destination',
            index=models.Index(fields=['category'], name='travel_dest_categor_592ef6_idx'),
        ),
        migrations.AddIndex(
            model_name='destination',
            index=models.Index(fields=['region'], name='travel_dest_region_025016_idx'),
        ),
        migrations.AddIndex(
            model_name='destination',
            index=models.Index(fields=['safety_level'], name='travel_dest_safety__2a7e47_idx'),
        ),
        migrations.AddField(
            model_name='certificationcode',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='business',
            index=models.Index(fields=['name'], name='travel_busi_name_41918d_idx'),
        ),
        migrations.AddIndex(
            model_name='business',
            index=models.Index(fields=['business_type'], name='travel_busi_busines_bbea93_idx'),
        ),
        migrations.AddIndex(
            model_name='business',
            index=models.Index(fields=['region'], name='travel_busi_region_20c683_idx'),
        ),
        migrations.AddIndex(
            model_name='business',
            index=models.Index(fields=['is_verified'], name='travel_busi_is_veri_ff3c9e_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['user'], name='travel_user_user_id_147942_idx'),
        ),
        migrations.AddIndex(
            model_name='userprofile',
            index=models.Index(fields=['preferred_language'], name='travel_user_preferr_faf9ae_idx'),
        ),
        migrations.AddIndex(
            model_name='travelguide',
            index=models.Index(fields=['guide_type'], name='travel_trav_guide_t_086d9c_idx'),
        ),
        migrations.AddIndex(
            model_name='travelguide',
            index=models.Index(fields=['region'], name='travel_trav_region_a88ef4_idx'),
        ),
        migrations.AddIndex(
            model_name='travelguide',
            index=models.Index(fields=['is_featured'], name='travel_trav_is_feat_489fa0_idx'),
        ),
        migrations.AddIndex(
            model_name='travelguide',
            index=models.Index(fields=['is_active'], name='travel_trav_is_acti_01b773_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reviewlike',
            unique_together={('user', 'review')},
        ),
        migrations.AddIndex(
            model_name='news',
            index=models.Index(fields=['news_type'], name='travel_news_news_ty_dfc3aa_idx'),
        ),
        migrations.AddIndex(
            model_name='news',
            index=models.Index(fields=['region'], name='travel_news_region_5f372f_idx'),
        ),
        migrations.AddIndex(
            model_name='news',
            index=models.Index(fields=['valid_from'], name='travel_news_valid_f_72765a_idx'),
        ),
        migrations.AddIndex(
            model_name='news',
            index=models.Index(fields=['is_active'], name='travel_news_is_acti_edff1b_idx'),
        ),
        migrations.AddIndex(
            model_name='news',
            index=models.Index(fields=['is_featured'], name='travel_news_is_feat_57d35e_idx'),
        ),
        migrations.AddIndex(
            model_name='itinerary',
            index=models.Index(fields=['start_date'], name='travel_itin_start_d_7b86df_idx'),
        ),
        migrations.AddIndex(
            model_name='itinerary',
            index=models.Index(fields=['status'], name='travel_itin_status_9063dc_idx'),
        ),
    ]
